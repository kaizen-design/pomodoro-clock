{"version":3,"sources":["templates/layout/Navbar.js","templates/layout/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","props","className","brand","Footer","href","target","rel","App","handleSettingsChange","e","state","active","id","breakLength","setState","soundAlert","sessionLength","timer","toggleClock","timerInterval","clearInterval","setInterval","decreaseTimer","cycleControl","countDown","cycle","audioBeep","play","setTimer","minutes","Math","floor","seconds","audio","currentTime","paused","ended","readyState","reset","pause","this","role","title","value","settingsChange","isReadOnly","type","onClick","preload","ref","src","React","Component","TimerControl","onChange","readOnly","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.dc2e07e2.chunk.js","sourcesContent":["import React from 'react';\n\nconst Navbar = (props) => {\n  return (\n    <nav className=\"navbar navbar-dark bg-gradient-dark shadow-sm\">\n      <div className=\"container justify-content-center\">\n        <span className=\"navbar-brand mb-0 h1\">{props.brand}</span>\n      </div>\n    </nav>\n  )\n};\n\nexport default Navbar;\n","import React from 'react';\n\nconst Footer = () => {\n  return (\n    <footer className=\"container py-3 text-center\">\n      <small>\n        Designed & built by <a href=\"https://github.com/kaizen-design\" target=\"_blank\" rel=\"noopener noreferrer\">Denis B.</a>\n      </small>\n    </footer>\n  )\n};\n\nexport default Footer;\n","import React from 'react';\nimport Navbar from './templates/layout/Navbar';\nimport Footer from './templates/layout/Footer';\n\nconst projectName = 'Pomodoro Clock';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      breakLength: 5,\n      sessionLength: 25,\n      timer: 1500,\n      timerInterval: null,\n      cycle: 'Session',\n      active: false,\n    };\n  }\n\n  handleSettingsChange = (e) => {\n    if (!this.state.active) {\n      const id = e.target.id;\n      switch (id) {\n        case 'break-decrement':\n          if (this.state.breakLength > 1) {\n            this.setState({\n              breakLength: this.state.breakLength - 1\n            });\n          }\n          break;\n        case 'break-increment':\n          if (this.state.breakLength < 60) {\n            this.soundAlert();\n            this.setState({\n              breakLength: this.state.breakLength + 1\n            });\n          }\n          break;\n        case 'session-decrement':\n          if (this.state.sessionLength > 1) {\n            this.setState({\n              sessionLength: this.state.sessionLength - 1,\n              timer: (this.state.sessionLength - 1) * 60\n            });\n          }\n          break;\n        case 'session-increment':\n          if (this.state.sessionLength < 60) {\n            this.setState({\n              sessionLength: this.state.sessionLength + 1,\n              timer: (this.state.sessionLength + 1) * 60\n            });\n          }\n          break;\n      }\n    }\n  };\n\n  toggleClock = () => {\n    if (!this.state.active) {\n      this.setState({\n        active: true,\n        timerInterval: setInterval(() => {\n          this.decreaseTimer();\n          this.cycleControl();\n        }, 1000)\n      });\n      this.countDown();\n    } else {\n      this.state.timerInterval && clearInterval(this.state.timerInterval);\n      this.setState({\n        active: false,\n        timerInterval: null\n      });\n    }\n  };\n\n  countDown = () => {\n    if (this.state.timer === 0) {\n      this.soundAlert();\n    } else if (this.state.timer === -1) {\n      if (this.state.cycle === 'Session') {\n        this.setState({\n          cycle: 'Break',\n          timer: this.state.breakLength * 60\n        });\n      } else {\n        this.setState({\n          cycle: 'Session',\n          timer: this.state.sessionLength * 60\n        });\n      }\n    }\n  };\n\n  decreaseTimer() {\n    this.setState({\n      timer: this.state.timer - 1\n    });\n  }\n\n  cycleControl = () => {\n    if (this.state.timer === 0) {\n      this.audioBeep.play();\n    } else if (this.state.timer === -1) {\n      if (this.state.cycle === 'Session') {\n        this.setState({\n          cycle: 'Break',\n          timer: this.state.breakLength * 60\n        });\n      } else {\n        this.setState({\n          cycle: 'Session',\n          timer: this.state.sessionLength * 60\n        });\n      }\n    }\n  };\n\n  setTimer = (timer) => {\n    let minutes = Math.floor(timer / 60);\n    let seconds = timer - minutes * 60;\n    seconds = seconds < 10 ? '0' + seconds : seconds;\n    minutes = minutes < 10 ? '0' + minutes : minutes;\n    return `${minutes}:${seconds}`;\n  };\n\n  soundAlert = () => {\n    const audio = this.audioBeep;\n    if (audio.currentTime > 0 && !audio.paused && !audio.ended && audio.readyState > 2) {\n      audio.play();\n    }\n  };\n\n  reset = () => {\n    this.setState({\n      breakLength: 5,\n      sessionLength: 25,\n      timer: 1500,\n      cycle: 'Session',\n      active: false,\n      timerInterval: null\n    });\n    this.audioBeep.pause();\n    this.audioBeep.currentTime = 0;\n    this.state.timerInterval && clearInterval(this.state.timerInterval);\n  };\n\n  render() {\n    return (\n      <div className=\"h-100 d-flex flex-column\">\n        <Navbar brand={projectName} />\n        <main role=\"main\" className=\"App container my-auto py-3\">\n          <div className=\"pomodoro-clock card text-center shadow\">\n\n            <div className=\"card-header\">\n              <div className=\"row\">\n                <TimerControl\n                  id='break'\n                  title='Break'\n                  value={this.state.breakLength}\n                  settingsChange={this.handleSettingsChange}\n                  isReadOnly={!!this.state.active}\n                />\n                <TimerControl\n                  id='session'\n                  title='Session'\n                  value={this.state.sessionLength}\n                  settingsChange={this.handleSettingsChange}\n                  isReadOnly={!!this.state.active}\n                />\n              </div>\n            </div>\n\n            <div className=\"card-body py-5\">\n              <h6 id=\"timer-label\" className=\"mb-0\">{this.state.cycle}</h6>\n              <h2 id=\"time-left\"\n                  className=\"display-1 font-weight-bold mb-0\">\n                {this.setTimer(this.state.timer)}\n              </h2>\n            </div>\n\n            <div className=\"card-footer text-muted\">\n              <div className=\"row\">\n                <div className=\"col\">\n                  <button\n                    id=\"start_stop\"\n                    type=\"button\"\n                    className={this.state.active ? 'btn btn-block btn-danger' : 'btn btn-block btn-primary'}\n                    onClick={this.toggleClock}>\n                    {this.state.active ? 'Pause' : 'Start'}\n                  </button>\n                </div>\n                <div className=\"col\">\n                  <button\n                    id=\"reset\"\n                    type=\"button\"\n                    className=\"btn btn-block btn-secondary\"\n                    onClick={this.reset}>\n                    Reset\n                  </button>\n                </div>\n              </div>\n            </div>\n\n            <audio\n              id=\"beep\"\n              preload=\"auto\"\n              ref={(audio) => {this.audioBeep = audio}}\n              src=\"https://raw.githubusercontent.com/freeCodeCamp/cdn/master/build/testable-projects-fcc/audio/BeepSound.wav\"\n            />\n\n          </div>\n        </main>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nclass TimerControl extends React.Component {\n  render() {\n    return (\n      <div className=\"col\">\n        <h6 id={this.props.id + '-label'} className=\"d-block text-center mb-2\">\n          {this.props.title} Length\n        </h6>\n        <div className=\"input-group\">\n          <div className=\"input-group-prepend\">\n            <button\n              id={this.props.id + '-decrement'}\n              className=\"btn btn-outline-secondary\"\n              type=\"button\"\n              onClick={this.props.settingsChange}>\n              -\n            </button>\n          </div>\n          <input\n            id={this.props.id + '-length'}\n            type=\"text\"\n            className=\"form-control text-center\"\n            value={this.props.value}\n            onChange={this.props.settingsChange}\n            readOnly={!!this.props.isReadOnly}\n          />\n          <div className=\"input-group-append\">\n            <button\n              id={this.props.id + '-increment'}\n              className=\"btn btn-outline-secondary\"\n              type=\"button\"\n              onClick={this.props.settingsChange}>\n              +\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './scss/App.scss';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}